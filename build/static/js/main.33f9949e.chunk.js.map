{"version":3,"sources":["components/Adresar.js","services/poruke.js","App.js","index.js"],"names":["Adresar","adresar","brisiporuku","izmjeniPoruku","ime","prezime","email","onClick","axios","get","noviObjekt","post","id","put","delete","App","props","useState","postaviAdresar","unosImena","postaviIme","unosPrezimena","postaviPrezime","unosEmaila","postaviEmail","unosFilter","postaviUnos3","prikaz","filter","k","toLowerCase","includes","toLocaleLowerCase","useEffect","porukeServer","then","response","data","type","value","onChange","e","target","map","a","key","console","log","noviobjekt","izmjenaPoruke","onSubmit","preventDefault","concat","ReactDOM","render","document","getElementById"],"mappings":"gMAaeA,EAVC,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,QAAQC,EAA+B,EAA/BA,YAAYC,EAAmB,EAAnBA,cACpC,OACA,4BACGF,EAAQG,IADX,KACkBH,EAAQI,QAD1B,KACqCJ,EAAQK,MAC3C,4BAAQC,QAASL,GAAjB,SACA,4BAAQK,QAASJ,GAAjB,a,gBCWW,EAhBI,WACf,OAAOK,IAAMC,IAHC,gBAkBH,EAZA,SAAAC,GACX,OAAOF,IAAMG,KAPC,cAOgBD,IAWnB,EARC,SAACE,EAAIF,GACjB,OAAOF,IAAMK,IAAN,UAXO,cAWP,YAA2BD,GAAMF,IAO7B,EALF,SAACE,GACV,OAAOJ,IAAMM,OAAN,UAdO,cAcP,YAA8BF,KCsG1BG,EA/GH,SAACC,GAAU,MAGYC,mBAAS,IAHrB,mBAGZhB,EAHY,KAGJiB,EAHI,OAKYD,mBAAS,gBALrB,mBAKZE,EALY,KAKFC,EALE,OAMoBH,mBAAS,oBAN7B,mBAMZI,EANY,KAMEC,EANF,OAOeL,mBAAS,mBAPxB,mBAOZM,EAPY,KAODC,EAPC,OAQaP,mBAAS,IARtB,mBAQZQ,EARY,KAQDC,EARC,KASfC,EAAsB,IAAdF,EAAmBxB,EAAQ2B,QAAO,SAAAC,GAAC,OAAEA,EAAEzB,IAAI0B,cAAcC,SAASN,EAAWO,wBAAwB/B,EAEjHgC,qBAAW,WACPC,IAECC,MAAK,SAACC,GACPlB,EAAekB,EAASC,WAM1B,IAkEF,OACG,6BACI,4CACA,2BAAOC,KAAK,OAAOC,MAAOd,EAAYe,SAtCtB,SAACC,GACpBf,EAAae,EAAEC,OAAOH,UAuCnB,4BAEMZ,EAAOgB,KAAI,SAAAC,GAAC,OACb,kBAAC,EAAD,CAASC,IAAKD,EAAEhC,GAAIX,QAAS2C,EAAG1C,YAAa,kBAxCjCU,EAwCsDgC,EAAEhC,QAvC5EsB,EACOtB,GACNuB,MAAK,SAAAC,GACFU,QAAQC,IAAIX,GACZlB,EAAejB,EAAQ2B,QAAO,SAAAgB,GAAC,OAAIA,EAAEhC,KAAOA,SAL7B,IAACA,GAwC6DT,cAAe,kBA/B/E,SAACS,GACnB,IAAMoC,EAAW,CACb5C,IAAIe,EACJd,QAAQgB,EACRf,MAAMiB,GAGVuB,QAAQC,IAAIC,GACZd,EACStB,EAAGoC,GACXb,MAAK,SAAAC,GACFlB,EACIjB,EAAQ0C,KAAI,SAAAC,GAAC,OAAEA,EAAEhC,KAAKA,EAAKgC,EAAGR,EAASC,YAmBuDY,CAAcL,EAAEhC,WAMlH,0BAAMsC,SA7EO,SAACT,GACjBA,EAAEU,iBACFL,QAAQC,IAAI,OAAON,EAAEC,QACrB,IAAMM,EAAW,CACb5C,IAAKe,EACLd,QAASgB,EACTf,MAAOiB,GAEZW,EACQc,GACNb,MAAM,SAACC,GACJU,QAAQC,IAAIX,GACZlB,EAAejB,EAAQmD,OAAOJ,SAkE3B,2BAAOT,MAAOpB,EAAWqB,SA5DR,SAACC,GACzBrB,EAAWqB,EAAEC,OAAOH,UA4Db,2BAAOA,MAAOlB,EAAemB,SAzDR,SAACC,GAC7BnB,EAAemB,EAAEC,OAAOH,UAyDjB,2BAAOA,MAAOhB,EAAYiB,SAvDR,SAACC,GAC1BjB,EAAaiB,EAAEC,OAAOH,UAuDf,4BAAQD,KAAK,UAAb,aCvGfe,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.33f9949e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Adresar = ({adresar,brisiporuku,izmjeniPoruku}) => {\r\n  return(\r\n  <li>\r\n    {adresar.ime}  {adresar.prezime}  {adresar.email}\r\n    <button onClick={brisiporuku}>Brisi</button>\r\n    <button onClick={izmjeniPoruku}>Izmjena</button>\r\n\r\n  </li>\r\n  )\r\n}\r\nexport default Adresar\r\n\r\n","import axios from 'axios'\r\nconst osnovniUrl= '/api/poruke'\r\n\r\nconst dohvatiSve = () => {\r\n    return axios.get(osnovniUrl);\r\n}\r\n \r\nconst stvori = noviObjekt => {\r\n    return axios.post(osnovniUrl, noviObjekt)\r\n}\r\n \r\nconst osvjezi = (id, noviObjekt) => {\r\n    return axios.put(`${osnovniUrl}/${id}`, noviObjekt)\r\n}\r\nconst brisi= (id) => {\r\n    return axios.delete(`${osnovniUrl}/${id}`)\r\n\r\n}\r\n \r\nexport default {\r\n    dohvatiSve,\r\n    stvori,\r\n    osvjezi,\r\n    brisi\r\n}","\nimport React, {useState,useEffect} from 'react'\nimport Adresar from './components/Adresar'\nimport poruke from './services/poruke'\nimport porukeServer from './services/poruke'\n\nconst App = (props) => {\n    //stanje dodajemo jer ne zelimo vise raditi sa fixnim nizom nego zelimo dodavati u adresar\n\n    const [adresar,postaviAdresar]=useState([])\n    //novo stanje za input element\n    const [unosImena,postaviIme] = useState(\"...unesi ime\")\n    const [unosPrezimena,postaviPrezime] = useState(\"...unesi prezime\")\n    const [unosEmaila,postaviEmail] = useState(\"...unesi e-mail\")\n    const [unosFilter,postaviUnos3]=useState(\"\")\n    let prikaz= unosFilter != \"\" ? adresar.filter(k=>k.ime.toLowerCase().includes(unosFilter.toLocaleLowerCase())) : adresar\n    //kad se desi render stranice dohvati mi podatke sa servera\n    useEffect( () => {\n        porukeServer\n        .dohvatiSve()\n        .then((response) => {\n        postaviAdresar(response.data)\n\n    })\n        \n\n\n    },[])\n\n    //novi adresar prima event\n    const noviAdresar = (e) => {\n        e.preventDefault()\n        console.log(\"klik\",e.target)\n        const noviobjekt={\n            ime: unosImena,\n            prezime: unosPrezimena,\n            email: unosEmaila\n        }\n       porukeServer\n       .stvori(noviobjekt)\n        .then( (response) =>{\n            console.log(response);\n            postaviAdresar(adresar.concat(noviobjekt))\n        } )\n\n\n\n    }\n    const promijenaUnosaImena = (e) => {\n        postaviIme(e.target.value)\n\n    }\n    const promijenaUnosaPrezimena = (e) => {\n        postaviPrezime(e.target.value)\n    }\n    const promijenaUnosaEmaila = (e) => {\n        postaviEmail(e.target.value)\n    }\n    const promjenaUnosa3 = (e) => {\n        postaviUnos3(e.target.value)\n    }\n    const brisanjePoruke = (id) => {\n        porukeServer\n        .brisi(id)\n        .then(response => {\n            console.log(response);\n            postaviAdresar(adresar.filter(a => a.id !== id))\n            \n        })\n    }\n   const izmjenaPoruke = (id) =>{\n       const noviobjekt={\n           ime:unosImena,\n           prezime:unosPrezimena,\n           email:unosEmaila\n\n       }\n       console.log(noviobjekt)\n       porukeServer\n       .osvjezi(id,noviobjekt)\n       .then(response => {\n           postaviAdresar(\n               adresar.map(a=>a.id!==id ? a :response.data)\n           )\n\n           \n       })\n      \n       \n\n       \n   }\n    \n    return(\n       <div>\n           <h1>Adresar-Novo</h1>\n           <input type=\"text\" value={unosFilter} onChange={promjenaUnosa3}></input>\n          \n           <ul>\n               {/* svaki element liste mora imati key */}\n                {prikaz.map(a => \n                <Adresar key={a.id} adresar={a} brisiporuku={() => brisanjePoruke(a.id)} izmjeniPoruku={() =>izmjenaPoruke(a.id)}/>\n                )}\n               \n                \n\n           </ul>\n           <form onSubmit={noviAdresar}>\n               <input value={unosImena} onChange={promijenaUnosaImena}/>\n               <input value={unosPrezimena} onChange={promijenaUnosaPrezimena}/>\n               <input value={unosEmaila} onChange={promijenaUnosaEmaila}/>\n               <button type=\"submit\">Spremi</button>\n\n           </form>\n       </div>\n    )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\n\n\n\nReactDOM.render(<App />,document.getElementById('root'))\n\n"],"sourceRoot":""}